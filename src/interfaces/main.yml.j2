---
swagger: '2.0'
info:
  version: 0.0.2
  title: No Instances API (Swagger)
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      summary: Get data from remote server
      responses:
        '200':
          description: Successful operation
        '500':
          description: Failed to retrieve data from remote server
      x-amazon-apigateway-auth:
        type: none
      x-amazon-apigateway-integration:
        type: http
        httpMethod: GET
        uri: https://api.github.com
        responses:
          '200':
            statusCode: '200'
          default:
            statusCode: '500'
            responseTemplates:
              application/json: '{"status": "unexpected response"}'
  /people:
    get:
      summary: Get a list of people
      responses:
        '200':
          description: Successful operation
      x-amazon-apigateway-integration:
        uri: {{ arn_prefix_lambda }}{{ lambda_stack.stack_outputs.dynamocrud }}/invocations
        credentials: {{ arn_prefix_role }}{{ base_stack.stack_outputs.ApiGatewayRoleName }}
        type: aws
        httpMethod: POST
        requestTemplates:
          application/json: '{"operation": "list"}'
        responses:
          default:
            statusCode: '200'
    post:
      summary: Add a new person
      responses:
        '200':
          description: Successful operation
      x-amazon-apigateway-integration:
        uri: {{ arn_prefix_lambda }}{{ lambda_stack.stack_outputs.dynamocrud }}/invocations
        credentials: {{ arn_prefix_role }}{{ base_stack.stack_outputs.ApiGatewayRoleName }}
        type: aws
        httpMethod: POST
        responses:
          default:
            statusCode: '200'
  /photos:
    get:
      summary: Get a list of photos
      responses:
        '200':
          description: Successful operation
      x-amazon-apigateway-integration:
        uri: {{ arn_prefix_lambda }}{{ lambda_stack.stack_outputs.objectstore }}/invocations
        credentials: {{ arn_prefix_role }}{{ base_stack.stack_outputs.ApiGatewayRoleName }}
        type: aws
        httpMethod: POST
        responses:
          default:
            statusCode: '200'
  /test/dynamo:
    get:
      summary: Test invocation of dynamocrud Lambda function
      responses:
        '200':
          description: Successful operation
      x-amazon-apigateway-integration:
        uri: {{ arn_prefix_lambda }}{{ lambda_stack.stack_outputs.dynamocrud }}/invocations
        credentials: {{ arn_prefix_role }}{{ base_stack.stack_outputs.ApiGatewayRoleName }}
        type: aws
        httpMethod: POST
        requestTemplates:
          application/json: '{"operation": "ping", "source": "api_gateway"}'
        responses:
          default:
            statusCode: '200'
