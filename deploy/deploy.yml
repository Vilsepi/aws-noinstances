---

# To run: ansible-playbook -v -i localhost, deploy.yml

- hosts: 127.0.0.1
  connection: local
  sudo: false
  gather_facts: false
  vars_files:
    - ["vars/secrets.yml", "vars/secrets_example.yml"]
    - "vars/vars.yml"
  tasks:

  - name: Create S3 artifactory bucket
    s3: bucket={{ s3_artifactory_bucket }} mode=create region={{ aws_region }}

  - name: Create database and other base resources
    cloudformation:
      stack_name: "{{ deployment_id }}-base"
      state: "present"
      region: "{{ aws_region }}"
      template: "cloudformation-templates/base.template"
      template_parameters:
        DeploymentName: "{{ deployment_id }}"
    register: base_stack
  - debug: msg="{{ base_stack.stack_outputs }}"

  - name: Clean build directory
    file: path={{ build_path }} state=absent

  - name: Create build directory
    file: path={{ build_path }} state=directory mode=0755

  - name: Package Lambda functions
    command: zip -FSr ../../deploy/{{ build_path }}/{{ item }}.zip . -i *
    args:
      chdir: ../functions/{{ item }}
    with_items: lambdas

  - name: Sync packages to S3 artifactory
    command: aws s3 cp {{ build_path }} s3://{{ s3_artifactory_bucket }}/artifacts/ --recursive --region {{ aws_region }}

  - name: Create Lambda functions
    cloudformation:
      stack_name: "{{ deployment_id }}-{{ item }}"
      state: present
      region: "{{ aws_region }}"
      template: cloudformation-templates/code.template
      template_parameters:
        DeploymentName: "{{ deployment_id }}"
        ArtifactoryBucket: "{{ s3_artifactory_bucket }}"
        ArtifactoryKey: "artifacts/{{ item }}.zip"
    with_items: lambdas
